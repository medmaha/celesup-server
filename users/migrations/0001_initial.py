# Generated by Django 4.1.5 on 2023-01-24 14:14

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('photo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('id', models.CharField(blank=True, max_length=100, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=160, unique=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('city', models.CharField(blank=True, max_length=150, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=20, null=True)),
                ('biography', models.CharField(blank=True, max_length=350, null=True)),
                ('account_type', models.CharField(blank=True, choices=[('celesup', 'Celesup'), ('support', 'Supporter'), ('administrator', 'Administrator')], max_length=20)),
                ('email_privacy', models.BooleanField(blank=True, default=True)),
                ('public_email', models.CharField(blank=True, max_length=160, null=True)),
                ('notification_email', models.CharField(blank=True, max_length=20, null=True)),
                ('secondary_email', models.EmailField(blank=True, max_length=160, null=True, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_rating', models.BigIntegerField(default=0)),
                ('avatar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avatar', to='photo.photo')),
                ('cover_img', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cover_img', to='photo.photo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
